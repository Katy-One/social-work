{"version":3,"sources":["hoc/AuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","console","log","this","props","to","React","connect","module","exports","ReduxDialogsForm","reduxForm","form","handleSubmit","load","pristine","reset","submitting","onSubmit","Field","placeholder","name","component","TextArea","validate","required","maxLength10","disabled","DialogItem","path","id","className","s","dialog","activeClassName","active","Message","message","Dialogs","match","params","dialogs","value","addMessageActionCreator","post_text","map","el","i","dialogsItem","compose","messagePage","names","textMessage","messagesList","withRouter"],"mappings":"sOAGIA,EAA0B,SAACC,GAC3B,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAKhBE,EAAiB,SAACC,GAAa,IAChCC,EAD+B,iLAK7B,OADAC,QAAQC,IAAIC,KAAKC,OACbD,KAAKC,MAAMR,OAGR,kBAACG,EAAcI,KAAKC,OAFjB,kBAAC,IAAD,CAAUC,GAAI,eANK,GACLC,IAAMP,WAWtC,OADoCQ,YAAQb,EAARa,CAAiCP,K,oBCpBzEQ,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,0B,gIC6BtIC,G,OAAmBC,YAAU,CAE/BC,KAAM,SAFeD,EApBL,SAACP,GACyCA,EAAnDS,aAAmDT,EAArCU,KAAqCV,EAA/BW,SAA+BX,EAArBY,MAAqBZ,EAAda,WAC5C,OAEI,0BAAMC,SAAUd,EAAMS,cAGlB,6BACI,kBAACM,EAAA,EAAD,CAAOC,YAAa,YAAaC,KAAM,YAAaC,UAAWC,IACxDC,SAAU,CAACC,IAAUC,QAIhC,4BAAQC,SAAUvB,EAAMW,UAAYX,EAAMa,YAA1C,iBAYNW,EAAa,SAACxB,GAChB,IAIIyB,EAAO,YAAczB,EAAM0B,GAC/B,OAEI,kBAAC,IAAD,CAASzB,GAAIwB,EAAME,UAAWC,IAAEC,OAAQC,gBAAiBF,IAAEG,QAAS/B,EAAMiB,OAK5Ee,EAAU,SAAChC,GACb,OACI,yBAAK2B,UAAU,WAAW3B,EAAMiC,UAoCzBC,EAjCC,SAAClC,GACb,IAAI0B,EAAK1B,EAAMmC,MAAMC,OAAOV,GAC5B7B,QAAQC,IAAI4B,GAMZ,OACI,yBAAKC,UAAWC,IAAES,SACbX,EAAK,6BACE,kBAACpB,EAAD,CAAkBQ,SAPlB,SAACwB,GACbtC,EAAMuC,wBAAwBD,EAAME,UAAWd,MAOnC,6BACK1B,EAAMiC,QAAQQ,KAAI,SAACC,EAAIC,GACpB,GAAIjB,GAAMgB,EAAGhB,GACT,OAAQ,kBAAC,EAAD,CAASO,QAASS,EAAGT,eAM7C,yBAAKN,UAAWC,IAAEgB,aACb5C,EAAMqC,QAAQI,KAAI,SAACC,EAAIC,GAAL,OACf,kBAAC,EAAD,CAAa1B,KAAMyB,EAAGzB,KAAMS,GAAIgB,EAAGhB,W,iCCxD5CmB,sBAAQ1C,aAVD,SAACZ,GACnB,MAAO,CACH8C,QAAS9C,EAAMuD,YAAYC,MAC3BC,YAAazD,EAAMuD,YAAYE,YAC/Bf,QAAS1C,EAAMuD,YAAYG,gBAMa,CAAEV,8BAA2BW,IAAYxD,IAA1EmD,CAA4FX","file":"static/js/4.8a453234.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    };\r\n};\r\n\r\n\r\nexport let withAuthRedirect=(Component)=>{\r\n    class RedirectComponent extends React.Component{\r\n\r\n        render() {\r\n            console.log(this.props)\r\n            if(!this.props.isAuth){\r\n             return   <Redirect to={'/login'} />\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent =connect(mapStateToPropsRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2a72_\",\"dialogsItems\":\"Dialogs_dialogsItems__3tmAU\",\"dialog\":\"Dialogs_dialog__1I61i\",\"active\":\"Dialogs_active__DT-MJ\"};","import React, {useState} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {NavLink, Redirect, Route} from \"react-router-dom\";\r\nimport {addMessageActionCreator, UpdateMessagePostActionCreator} from \"../../redux/message-reducer\";\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {TextArea} from \"../common/FormControls/FormControls\";\r\nimport {maxLength10, required} from \"../../utils/validator/validator\";\r\nimport NewsContainer from \"../News/NewsContainer\";\r\n\r\n\r\nconst DialogsForm = (props) => {\r\n    const {handleSubmit, load, pristine, reset, submitting} = props\r\n    return (\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n\r\n            <div>\r\n                <Field placeholder={'post text'} name={'post_text'} component={TextArea}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n\r\n\r\n            <button disabled={props.pristine || props.submitting}>Add post</button>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst ReduxDialogsForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'login'\r\n})(DialogsForm)\r\n\r\nconst DialogItem = (props) => {\r\n    const UserMessage = (e) => {\r\n        props.setState(true)\r\n    }\r\n\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        // <Route path='/news' render={() => <NewsContainer/>}/>\r\n        <NavLink to={path} className={s.dialog} activeClassName={s.active}>{props.name}</NavLink>\r\n\r\n    )\r\n}\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className=\"message\">{props.message}</div>\r\n    )\r\n}\r\nconst Dialogs = (props) => {\r\n    let id = props.match.params.id\r\n    console.log(id)\r\n    // let [state, setState] = useState(false)\r\n    let addSubmit = (value) => {\r\n        props.addMessageActionCreator(value.post_text, id)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            {id ? <div>\r\n                    <ReduxDialogsForm onSubmit={addSubmit}/>\r\n                    <div>\r\n                        {props.message.map((el, i) => {\r\n                            if (id == el.id) {\r\n                                return  <Message message={el.message}/>\r\n                            }\r\n\r\n                        } )}\r\n                    </div>\r\n                </div> :\r\n                <div className={s.dialogsItem}>\r\n                    {props.dialogs.map((el, i) =>\r\n                        <DialogItem  name={el.name} id={el.id}/>\r\n                    )}\r\n                </div>\r\n\r\n\r\n            }\r\n        </div>)\r\n}\r\n\r\n\r\nexport default Dialogs\r\n","import React from 'react';\r\n\r\nimport {addMessageActionCreator} from \"../../redux/message-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.messagePage.names,\r\n        textMessage: state.messagePage.textMessage,\r\n        message: state.messagePage.messagesList,\r\n\r\n    };\r\n};\r\n\r\n\r\nexport default compose(connect(mapStateToProps, { addMessageActionCreator}), withRouter, withAuthRedirect)(Dialogs)\r\n"],"sourceRoot":""}