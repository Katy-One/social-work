{"version":3,"sources":["hoc/AuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPost/MyPost.module.css","components/Profile/ProfileInfo/StatusProfile/StatusProfile.js","components/Profile/ProfileInfo/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/MyPost/MyPost.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContaner.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","console","log","this","props","to","React","connect","module","exports","StatusProfile","useState","editMode","setStateEditMode","status","setStateStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","type","ReduxDataForm","reduxForm","form","handleSubmit","pristine","submitting","reset","error","onSubmit","ownerId","disabled","CreateInput","required","Input","label","TextArea","Object","keys","profile","contacts","map","key","className","style","formSummeryError","ProfileData","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactsTitle","contactsValue","Contact","ProfileInfo","Preloader","setState","s","avatar","src","photos","large","photo","alt","name","preventDefault","target","files","length","setPhotoApi","id","dialog","activeClassName","active","initialValues","saveProfile","then","MyPost","item","massage","like","ReduxMyPostForm","onSubmitSuccess","result","dispatch","load","createRecord","resetForm","Field","component","validate","maxLength10","MyPosts","arr_post","posts","el","i","createRef","data","text","post_text","addPostText","updateNewPostText","NewPostText","MyPostsContainer","profilePage","postInfo","newPostText","Profile","match","params","userId","getUsersProfile","authorizedUserId","ProfileContainer","history","push","getStatus","changeUserId","prevProps","prevState","snapshot","location","pathname","compose","withRouter"],"mappings":"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","file":"static/js/3.7ad00abe.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    };\r\n};\r\n\r\n\r\nexport let withAuthRedirect=(Component)=>{\r\n    class RedirectComponent extends React.Component{\r\n\r\n        render() {\r\n            console.log(this.props)\r\n            if(!this.props.isAuth){\r\n             return   <Redirect to={'/login'} />\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent =connect(mapStateToPropsRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__2ulmU\",\"avatar\":\"ProfileInfo_avatar__Sdb2x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPost_item__1YJKB\"};","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst StatusProfile = (props) => {\r\n    let [editMode, setStateEditMode] = useState(false)\r\n    let [status, setStateStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStateStatus(props.status)\r\n    }, [props.status])\r\n\r\n\r\n    let activateMode = () => {\r\n        setStateEditMode(true)\r\n    }\r\n    let deActivateMode = () => {\r\n        setStateEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    let updateStatus = (e) => {\r\n\r\n        setStateStatus(e.currentTarget.value)\r\n\r\n    }\r\n\r\n    return <div>\r\n        {!editMode &&\r\n        <span onDoubleClick={activateMode}>{props.status || 'here can be your status...'}</span>\r\n        }\r\n        {editMode &&\r\n        < input onChange={updateStatus} autoFocus={true} onBlur={deActivateMode} value={status} type=\"text\"/>\r\n        }\r\n    </div>\r\n\r\n\r\n}\r\n\r\nexport default StatusProfile","import React from \"react\";\r\nimport {CreateInput, Input, TextArea} from \"../../common/FormControls/FormControls\";\r\nimport { reduxForm} from 'redux-form'\r\n\r\nimport {required} from \"../../../utils/validator/validator\";\r\nimport style from \"../../common/FormControls/FormControls.module.css\";\r\n\r\nconst ProfileDataForm = (props) => {\r\n    console.log(props)\r\n    const { handleSubmit, pristine, reset, submitting, error } = props\r\n    return <form onSubmit={handleSubmit}>\r\n        {props.ownerId &&  <button  disabled={pristine || submitting}>Save</button>}\r\n        <div>{CreateInput('', 'fullName', [required], Input, {type: 'text', label: 'Full Name:'} )}</div>\r\n        <div>{CreateInput('', 'lookingForAJob', [], Input, {type: 'checkbox', label: 'Looking for a job:'} )}</div>\r\n        {/*{props.profile.lookingForAJob &&*/}\r\n        {/*}*/}\r\n      {CreateInput('', 'lookingForAJobDescription', [], TextArea, {type: 'text', label: 'My professional skills:'} )}\r\n\r\n   {CreateInput('', 'aboutMe', [], TextArea, {type: 'text', label: 'About me:'} )}\r\n\r\n        <div><b>Contact:</b>\r\n            {Object.keys(props.profile.contacts).map(key => {\r\n\r\n                return <div key={key}>{CreateInput('', 'contacts.'+ key, [], Input, {type: 'text', label: `${key}:`} )}</div>\r\n\r\n                // <Contact contactsTitle={key} contactsValue={props.profile.contacts[key]}/>\r\n            })}\r\n            {\r\n                props.error && <div className={style.formSummeryError}>{props.error}</div>\r\n            }\r\n        </div>\r\n\r\n\r\n    </form>\r\n}\r\nconst ReduxDataForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'dataForm',\r\n\r\n})(ProfileDataForm)\r\n\r\n\r\nexport default  ReduxDataForm","import React, {useState} from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport StatusProfile from \"./StatusProfile/StatusProfile\";\r\nimport {unfollow} from \"../../../redux/users-reducer\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    console.log(props)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    let [editMode, setStateEditMode] = useState(false)\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    let [state, setState] = useState(false)\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    let onChangeFile = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (e.target.files.length) {\r\n            props.setPhotoApi(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    let onSubmitForm = (profile) => {\r\n        console.log(profile)\r\n        props.saveProfile(profile).then(\r\n            () => {\r\n                setStateEditMode(false)\r\n            }\r\n        )\r\n\r\n\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <div className={s.avatar}>\r\n                <img src={props.profile.photos.large || props.photo} alt=\"\"/>\r\n            </div>\r\n\r\n            {props.ownerId ?\r\n            <div>\r\n                <input type=\"file\" name=\"myImage\" onChange={onChangeFile}/>\r\n            </div> :\r\n                <NavLink to={'/dialogs/' + props.id} onClick={()=> {setState(true)}} className={s.dialog} activeClassName={s.active}>Message</NavLink>\r\n\r\n            }\r\n\r\n            <StatusProfile status={props.status} updateStatus={props.updateStatus}/>\r\n            {editMode ? <ProfileDataForm initialValues={props.profile} ownerId={props.ownerId} profile={props.profile}\r\n                                         onSubmit={onSubmitForm}/> :\r\n                <ProfileData ownerId={props.ownerId} setStateEditMode={() => {\r\n                    setStateEditMode(true)\r\n                }} profile={props.profile}/>}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nconst ProfileData = (props) => {\r\n    return <div>\r\n        {props.ownerId && <button onClick={props.setStateEditMode}>Edit</button>}\r\n        <div><b>Full name:</b>{props.profile.fullName}</div>\r\n        <div><b>Looking for a job:</b>{props.profile.lookingForAJob ? 'yes' : 'no'} </div>\r\n        {props.profile.lookingForAJob &&\r\n        <div><b>My professional skills:</b> {props.profile.lookingForAJobDescription}</div>\r\n        }\r\n        <div><b>About me:</b> {props.profile.aboutMe}</div>\r\n\r\n        <div><b>Contact:</b>\r\n            {Object.keys(props.profile.contacts).map(key => {\r\n                return <Contact key={key} contactsTitle={key} contactsValue={props.profile.contacts[key]}/>\r\n            })}\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactsTitle, contactsValue}) => {\r\n    return <div>\r\n        <b>{contactsTitle}:</b> <span>{contactsValue}</span>\r\n    </div>\r\n\r\n}\r\nexport default ProfileInfo","import React from \"react\";\r\nimport s from \"./MyPost.module.css\";\r\n\r\nconst MyPost = (props) => {\r\n\r\n    return <div className={s.item}>\r\n\r\n        <img\r\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQIeKxpjPeCtvBoU7BD3oxt0ZdwtmynAqlpR15w2bHTA2oyJhZU\"\r\n            alt=\"\"/>\r\n        {props.massage}\r\n        <span>{props.like}</span>\r\n    </div>\r\n\r\n}\r\nexport default MyPost","import React from \"react\";\r\nimport MyPost from './MyPost/MyPost'\r\nimport {Field,reset, reduxForm} from 'redux-form'\r\nimport { maxLength10, required} from \"../../../utils/validator/validator\";\r\nimport {TextArea} from \"../../common/FormControls/FormControls\";\r\n\r\n\r\nconst MyPostForm = (props) => {\r\n    const {handleSubmit, load, pristine, reset, submitting} = props\r\n    const {createRecord, resetForm} = props;\r\n\r\n\r\n\r\n    return (\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n\r\n            <div>\r\n                <Field   name='post_text' component={TextArea} validate={[required, maxLength10]}/>\r\n            </div>\r\n\r\n\r\n            <button disabled={props.pristine || props.submitting}>Add post</button>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('login'));\r\nconst ReduxMyPostForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'login',\r\n    onSubmitSuccess: afterSubmit,\r\n})(MyPostForm)\r\n\r\nconst MyPosts = (props) => {\r\n    console.log(\"props\")\r\n    let arr_post = props.posts.map((el, i) => <MyPost massage={el.massage} id={i + 1} like={el.like}/>);\r\n    let newPostElement = React.createRef()\r\n    const addPost = () => {\r\n\r\n\r\n    }\r\n    const onPostChange = () => {\r\n\r\n        let text = newPostElement.current.value;\r\n\r\n\r\n    }\r\n    let submitPostForm = (data) => {\r\n        console.log(data)\r\n        let id = props.posts.length + 1;\r\n        let text = data.post_text\r\n\r\n        props.addPostText(id, text)\r\n\r\n        props.updateNewPostText(text)\r\n    }\r\n    return <div>\r\n        <div>\r\n            <h3> My post</h3>\r\n            {/*<textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText}/>*/}\r\n            {/*<button onClick={addPost}>add button</button>*/}\r\n\r\n        </div>\r\n        < ReduxMyPostForm onSubmit={submitPostForm} text={props.NewPostText}/>\r\n        <div>\r\n            {arr_post}\r\n        </div>\r\n    </div>\r\n}\r\nexport default MyPosts","import React from \"react\";\r\nimport {\r\n    addPostText,\r\n    updateNewPostText\r\n} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.postInfo,\r\n        newPostText:state.profilePage.newPostText\r\n    };\r\n};\r\n// let mapDispatchToProps = (dispatch) => {\r\n//\r\n//     return {\r\n//         updateNewPostText: (text) => {\r\n//             dispatch(UpdateNewPostActionCreator(text))\r\n//         },\r\n//         addPostText: (id) => {\r\n//             dispatch(addPostActionCreator(id))\r\n//         }\r\n//     }\r\n// }\r\nconst MyPostsContainer = connect(mapStateToProps,{addPostText, updateNewPostText})(MyPosts)\r\nexport default MyPostsContainer","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContaner\";\r\n\r\n\r\nconst Profile = (props) => {\r\nconsole.log(props)\r\n\r\n    return  <div >\r\n      <ProfileInfo saveProfile={props.saveProfile} ownerId={props.ownerId} id={props.match.params.userId} getUsersProfile={props.getUsersProfile} setPhotoApi={props.setPhotoApi} profile={props.profile} authorizedUserId={props.authorizedUserId} photo={props.photo} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer/>\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUsersProfile, setPhotoApi, updateStatus, saveProfile} from \"../../redux/profile-reducer\";\r\n\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(this.props)\r\n    }\r\n\r\n    changeUserId() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n\r\n        this.props.getUsersProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount(props) {\r\n        this.changeUserId()\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(prevProps)\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.changeUserId()\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        {\r\n            if (this.props.isAuth === false && this.props.location.pathname === '/profile') {\r\n                return <Redirect to={'/login'}/>\r\n            }\r\n        }\r\n        return <>\r\n\r\n            <div>\r\n                <Profile setPhotoApi={this.props.setPhotoApi} {...this.props} profile={this.props.profile}\r\n                         status={this.props.status} getUsersProfile={this.props.getUsersProfile}\r\n                         updateStatus={this.props.updateStatus}\r\n                         ownerId={!this.props.match.params.userId}\r\n                         id={this.props.match.params.userId}\r\n                         saveProfile={this.props.saveProfile}/>\r\n            </div>\r\n\r\n\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    photo: state.profilePage.photo\r\n})\r\nexport default compose(connect(mapStateToProps, {\r\n    getUsersProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    setPhotoApi,\r\n    saveProfile\r\n}), withRouter)(ProfileContainer)"],"sourceRoot":""}